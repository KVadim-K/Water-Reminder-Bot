import os
import logging
import threading
import datetime
import time
import random
import pytz
import functools
import requests
from deep_translator import GoogleTranslator  # –ò—Å–ø–æ–ª—å–∑—É–µ–º deep-translator –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞

import telebot
from telebot import types  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from dotenv import load_dotenv
from pathlib import Path
from models import Session, User, Admin

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
env_path = Path(__file__).parent / ".env"
load_dotenv(dotenv_path=env_path)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
active_threads = {}

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
def error_handler(func):
    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        try:
            return func(*args, **kwargs)
        except Exception as e:
            logger.error(f"Error in {func.__name__}: {str(e)}", exc_info=True)
    return wrapper

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def get_user(chat_id):
    session = Session()
    try:
        user = session.query(User).filter_by(chat_id=chat_id).first()
        if not user:
            user = User(chat_id=chat_id)
            session.add(user)
            session.commit()
        return user
    finally:
        session.close()

def is_valid_time(time_str):
    try:
        datetime.datetime.strptime(time_str, "%H:%M")
        return True
    except ValueError:
        return False

# –¢–µ–∫—Å—Ç—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
texts = {
    "ru": {
        "welcome": "–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –ø–∏—Ç—å –≤–æ–¥—É!",
        "reminder": "üíß –ü–æ—Ä–∞ –≤—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã!",
        "fact": "–õ–æ–≤–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç:",
        "help": ("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n"
                 "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                 "/help - –°–ø—Ä–∞–≤–∫–∞\n"
                 "/fact - –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç\n"
                 "/language - –°–º–µ–Ω–∞ —è–∑—ã–∫–∞\n"
                 "/set_time - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è\n"
                 "/set_timezone - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å\n"
                 "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        "language_changed": "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π",
        "time_updated": "‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!",
        "invalid_time": "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ß–ß:–ú–ú)",
        "facts": [
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç: –ß–µ–ª–æ–≤–µ–∫ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ —Ç—Ä–∞—Ç–∏—Ç –Ω–∞ –∂–µ–≤–∞–Ω–∏–µ, —á–µ–º –Ω–∞ —Å–æ–Ω.",
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç: –ú—ë–¥ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ—Ä—Ç–∏—Ç—Å—è.",
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç: –£ –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Ö —Ç–µ–ª–∞."
        ],
    },
    "en": {
        "welcome": "Hello! I will remind you to drink water!",
        "reminder": "üíß Time to drink water!",
        "fact": "Random fact:",
        "help": ("Commands:\n"
                 "/start - Start bot\n"
                 "/help - Help\n"
                 "/fact - Random fact\n"
                 "/language - Change language\n"
                 "/set_time - Set schedule\n"
                 "/set_timezone - Set timezone\n"
                 "/menu - Main menu"),
        "language_changed": "Language changed to English",
        "time_updated": "‚è∞ Schedule updated!",
        "invalid_time": "‚ùå Invalid time format (use HH:MM)",
        "facts": [
            "Interesting fact: A human spends more time chewing than sleeping.",
            "Interesting fact: Honey never spoils.",
            "Interesting fact: Every person has a unique body odor."
        ],
    }
}

@bot.message_handler(commands=['set_timezone'])
@error_handler
def set_timezone_handler(message):
    chat_id = message.chat.id
    args = message.text.split()[1:]
    if not args:
        bot.send_message(chat_id, "‚ùå –£–∫–∞–∂–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, Eur
